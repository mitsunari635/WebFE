{"ast":null,"code":"import actionTypes from './actionTypes';\nimport { createNewPolicyFunc, getAllPolicy, deletePolicyFunc, editPolicyFunc, getAllDetailPolicy, saveDetailPolicyService, getAllPolicyPageService } from '../../services/policyService';\nimport { toast } from \"react-toastify\";\nexport const createNewPolicy = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await createNewPolicyFunc(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Tạo sản phẩm thành công\");\n        dispatch(savePolicySuccess());\n        dispatch(fetchAllPolicyStart());\n      } else {\n        dispatch(savePolicyFailed());\n      }\n    } catch (e) {\n      dispatch(savePolicyFailed());\n      console.log('savePolicyFailed error', e);\n    }\n  };\n};\nexport const savePolicySuccess = () => ({\n  type: actionTypes.CREATE_POLICY_SUCCESS\n});\nexport const savePolicyFailed = () => ({\n  type: actionTypes.CREATE_POLICY_FAILED\n});\nexport const fetchAllPolicyStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllPolicy(\"ALL\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchAllPolicySuccess(res.policies));\n      } else {\n        toast.success(\"Lấy sản phẩm thất bại\");\n        dispatch(fetchAllPolicyFailed());\n      }\n    } catch (e) {\n      toast.success(\"Lấy sản phẩm thất bại\");\n      dispatch(fetchAllPolicyFailed());\n      console.log('fetchAllPolicyFailed error', e);\n    }\n  };\n};\nexport const fetchAllPolicySuccess = data => ({\n  type: actionTypes.FETCH_ALL_POLICY_SUCCESS,\n  policies: data\n});\nexport const fetchAllPolicyFailed = () => ({\n  type: actionTypes.FETCH_ALL_POLICY_FAILED\n});\nexport const deletePolicy = policyId => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await deletePolicyFunc(policyId);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Xóa sản phẩm thành công\");\n        dispatch(deletePolicySuccess());\n        dispatch(fetchAllPolicyStart());\n      } else {\n        toast.error(\"Xóa sản phẩm thất bại\");\n        dispatch(deletePolicyFailed());\n      }\n    } catch (e) {\n      dispatch(deletePolicyFailed());\n      console.log('deletePolicyFailed error', e);\n    }\n  };\n};\nexport const deletePolicySuccess = () => ({\n  type: actionTypes.DELETE_POLICY_SUCCESS\n});\nexport const deletePolicyFailed = () => ({\n  type: actionTypes.DELETE_POLICY_FAILED\n});\nexport const editPolicy = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await editPolicyFunc(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Cập nhật sản phẩm thành công\");\n        dispatch(editPolicySuccess());\n        dispatch(fetchAllPolicyStart());\n      } else {\n        toast.error(\"Cập nhật sản phẩm thất bại\");\n        dispatch(editPolicyFailed());\n      }\n    } catch (e) {\n      toast.error(\"Cập nhật sản phẩm thất bại\");\n      dispatch(editPolicyFailed());\n      console.log('editPolicyFailed error', e);\n    }\n  };\n};\nexport const editPolicySuccess = () => ({\n  type: actionTypes.EDIT_POLICY_SUCCESS\n});\nexport const editPolicyFailed = () => ({\n  type: actionTypes.EDIT_POLICY_FAILED\n});\nexport const fetchAllPolicyPage = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllPolicyPageService('');\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_ALL_POLICY_PAGE_SUCCESS,\n          dataAllPolicy: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_ALL_POLICY_PAGE_FAILED\n        });\n      }\n    } catch (e) {\n      console.log('Fetch all policy failed: ', e);\n      dispatch({\n        type: actionTypes.FETCH_ALL_POLICY_PAGE_FAILED\n      });\n    }\n  };\n};\nexport const fetchAllDetailPolicy = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllDetailPolicy();\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_ALL_DETAIL_POLICY_SUCCESS,\n          dataAllDetailPolicy: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_ALL_DETAIL_POLICY_FAILED\n        });\n      }\n    } catch (e) {\n      console.log('Fetch all detail Policy failed: ', e);\n      dispatch({\n        type: actionTypes.FETCH_ALL_DETAIL_POLICY_FAILED\n      });\n    }\n  };\n};\nexport const saveDetailPolicy = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await saveDetailPolicyService(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Save detail Policy success\");\n        dispatch({\n          type: actionTypes.SAVE_DETAIL_POLICY_SUCCESS\n        });\n      } else {\n        toast.error(\"Save detail Policy fail\");\n        dispatch({\n          type: actionTypes.SAVE_DETAIL_POLICY_FAILED\n        });\n      }\n    } catch (e) {\n      toast.error(\"Save detail Policy fail\");\n      dispatch({\n        type: actionTypes.SAVE_DETAIL_POLICY_FAILED\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/LienSon/LienSon-FE/src/store/actions/policyActions.js"],"names":["actionTypes","createNewPolicyFunc","getAllPolicy","deletePolicyFunc","editPolicyFunc","getAllDetailPolicy","saveDetailPolicyService","getAllPolicyPageService","toast","createNewPolicy","data","dispatch","getState","res","errCode","success","savePolicySuccess","fetchAllPolicyStart","savePolicyFailed","e","console","log","type","CREATE_POLICY_SUCCESS","CREATE_POLICY_FAILED","fetchAllPolicySuccess","policies","fetchAllPolicyFailed","FETCH_ALL_POLICY_SUCCESS","FETCH_ALL_POLICY_FAILED","deletePolicy","policyId","deletePolicySuccess","error","deletePolicyFailed","DELETE_POLICY_SUCCESS","DELETE_POLICY_FAILED","editPolicy","editPolicySuccess","editPolicyFailed","EDIT_POLICY_SUCCESS","EDIT_POLICY_FAILED","fetchAllPolicyPage","FETCH_ALL_POLICY_PAGE_SUCCESS","dataAllPolicy","FETCH_ALL_POLICY_PAGE_FAILED","fetchAllDetailPolicy","FETCH_ALL_DETAIL_POLICY_SUCCESS","dataAllDetailPolicy","FETCH_ALL_DETAIL_POLICY_FAILED","saveDetailPolicy","SAVE_DETAIL_POLICY_SUCCESS","SAVE_DETAIL_POLICY_FAILED"],"mappings":"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","sourcesContent":["import actionTypes from './actionTypes';\r\nimport {\r\n    createNewPolicyFunc,getAllPolicy, \r\n    deletePolicyFunc, editPolicyFunc, \r\n    getAllDetailPolicy, saveDetailPolicyService,\r\n    getAllPolicyPageService\r\n}\r\n    from '../../services/policyService';\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const createNewPolicy = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await createNewPolicyFunc(data);\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Tạo sản phẩm thành công\");\r\n                dispatch(savePolicySuccess());\r\n                dispatch(fetchAllPolicyStart());\r\n            } else {\r\n                dispatch(savePolicyFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(savePolicyFailed());\r\n            console.log('savePolicyFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const savePolicySuccess = () => ({\r\n    type: actionTypes.CREATE_POLICY_SUCCESS\r\n})\r\n\r\nexport const savePolicyFailed = () => ({\r\n    type: actionTypes.CREATE_POLICY_FAILED\r\n})\r\n\r\nexport const fetchAllPolicyStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllPolicy(\"ALL\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchAllPolicySuccess(res.policies));\r\n            } else {\r\n                toast.success(\"Lấy sản phẩm thất bại\");\r\n                dispatch(fetchAllPolicyFailed());\r\n            }\r\n        } catch (e) {\r\n            toast.success(\"Lấy sản phẩm thất bại\");\r\n            dispatch(fetchAllPolicyFailed());\r\n            console.log('fetchAllPolicyFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllPolicySuccess = (data) => ({\r\n    type: actionTypes.FETCH_ALL_POLICY_SUCCESS,\r\n    policies: data\r\n})\r\n\r\nexport const fetchAllPolicyFailed = () => ({\r\n    type: actionTypes.FETCH_ALL_POLICY_FAILED\r\n})\r\n\r\nexport const deletePolicy = (policyId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await deletePolicyFunc(policyId);\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Xóa sản phẩm thành công\");\r\n                dispatch(deletePolicySuccess());\r\n                dispatch(fetchAllPolicyStart());\r\n            } else {\r\n                toast.error(\"Xóa sản phẩm thất bại\");\r\n                dispatch(deletePolicyFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(deletePolicyFailed());\r\n            console.log('deletePolicyFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deletePolicySuccess = () => ({\r\n    type: actionTypes.DELETE_POLICY_SUCCESS\r\n})\r\n\r\nexport const deletePolicyFailed = () => ({\r\n    type: actionTypes.DELETE_POLICY_FAILED\r\n})\r\n\r\nexport const editPolicy = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await editPolicyFunc(data);\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật sản phẩm thành công\");\r\n                dispatch(editPolicySuccess());\r\n                dispatch(fetchAllPolicyStart());\r\n            } else {\r\n                toast.error(\"Cập nhật sản phẩm thất bại\");\r\n                dispatch(editPolicyFailed());\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Cập nhật sản phẩm thất bại\");\r\n            dispatch(editPolicyFailed());\r\n            console.log('editPolicyFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const editPolicySuccess = () => ({\r\n    type: actionTypes.EDIT_POLICY_SUCCESS\r\n})\r\n\r\nexport const editPolicyFailed = () => ({\r\n    type: actionTypes.EDIT_POLICY_FAILED\r\n})\r\n\r\nexport const fetchAllPolicyPage = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllPolicyPageService('');\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_POLICY_PAGE_SUCCESS,\r\n                    dataAllPolicy: res.data\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_POLICY_PAGE_FAILED,\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log('Fetch all policy failed: ', e)\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALL_POLICY_PAGE_FAILED,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllDetailPolicy = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllDetailPolicy();\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DETAIL_POLICY_SUCCESS,\r\n                    dataAllDetailPolicy: res.data\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DETAIL_POLICY_FAILED,\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log('Fetch all detail Policy failed: ', e)\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALL_DETAIL_POLICY_FAILED,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveDetailPolicy = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await saveDetailPolicyService(data);\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Save detail Policy success\")\r\n                dispatch({\r\n                    type: actionTypes.SAVE_DETAIL_POLICY_SUCCESS,\r\n                })\r\n            }\r\n            else {\r\n                toast.error(\"Save detail Policy fail\")\r\n                dispatch({\r\n                    type: actionTypes.SAVE_DETAIL_POLICY_FAILED,\r\n                })\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Save detail Policy fail\")\r\n            dispatch({\r\n                type: actionTypes.SAVE_DETAIL_POLICY_FAILED,\r\n            })\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}