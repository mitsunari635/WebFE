{"ast":null,"code":"var _jsxFileName = \"D:\\\\LienSon\\\\LienSon-FE\\\\src\\\\containers\\\\System\\\\Admin\\\\ManageProduct.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./ManageProduct.scss\";\nimport * as actions from \"../../../store/actions\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\"; // import style manually\n\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport Select from \"react-select\";\nimport { getDetailInforProduct } from \"../../../services/productService\";\nimport { CRUD_ACTIONS } from \"../../../utils\"; // Initialize a markdown parser\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\n\nclass ManageProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildDataInputSelect = inputData => {\n      let result = [];\n\n      if (inputData && inputData.length > 0) {\n        inputData.map((item, index) => {\n          let object = {};\n          let label = `${item.name}`;\n          object.label = label;\n          object.value = item.id;\n          result.push(object);\n        });\n      }\n\n      return result;\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentHTML: html,\n        contentMarkdown: text // contentHTML: text,\n\n      });\n    };\n\n    this.handleSaveContentMarkdown = () => {\n      let {\n        hasOldData\n      } = this.state;\n      this.props.saveDetailProduct({\n        contentHTML: this.state.contentHTML,\n        contentMarkdown: this.state.contentMarkdown,\n        description: this.state.description,\n        productId: this.state.selectedOption.value,\n        action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE\n      });\n      this.setState({\n        selectedOption: \"\",\n        contentHTML: \"\",\n        contentMarkdown: \"\",\n        description: \"\",\n        hasOldData: false,\n        productId: \"\"\n      });\n    };\n\n    this.handleChangeSelect = async selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      let res = await getDetailInforProduct(selectedOption.value);\n\n      if (res && res.errCode === 0 && res.data && res.data.Markdown) {\n        let markdown = res.data.Markdown;\n        this.setState({\n          contentHTML: markdown.contentHTML,\n          contentMarkdown: markdown.contentMarkdown,\n          description: markdown.description,\n          hasOldData: true\n        });\n      } else {\n        this.setState({\n          contentHTML: \"\",\n          contentMarkdown: \"\",\n          description: \"\",\n          hasOldData: false\n        });\n      }\n    };\n\n    this.handleOnChangeDesc = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.state = {\n      contentHTML: \"\",\n      contentMarkdown: \"\",\n      selectedOption: \"\",\n      description: \"\",\n      listProduct: [],\n      hasOldData: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllDetailProduct();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allDetailProduct !== this.props.allDetailProduct) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDetailProduct);\n      this.setState({\n        listProduct: dataSelect\n      });\n    }\n  } // Finish!\n\n\n  render() {\n    let {\n      hasOldData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-product-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Th\\xEAm th\\xF4ng tin s\\u1EA3n ph\\u1EA9m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ch\\u1ECDn s\\u1EA3n ph\\u1EA9m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedOption,\n            onChange: this.handleChangeSelect,\n            options: this.state.listProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-product-edit\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: \"500px\"\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: hasOldData === true ? \"save-detail-product\" : \"create-detail-product\",\n        children: hasOldData === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"L\\u01B0u th\\xF4ng tin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\u1EA1o th\\xF4ng tin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allDetailProduct: state.product.allDetailProduct\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllDetailProduct: id => dispatch(actions.fetchAllDetailProduct()),\n    saveDetailProduct: data => dispatch(actions.saveDetailProduct(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageProduct);","map":{"version":3,"sources":["D:/LienSon/LienSon-FE/src/containers/System/Admin/ManageProduct.js"],"names":["React","Component","connect","actions","MarkdownIt","MdEditor","Select","getDetailInforProduct","CRUD_ACTIONS","mdParser","ManageProduct","constructor","props","buildDataInputSelect","inputData","result","length","map","item","index","object","label","name","value","id","push","handleEditorChange","html","text","setState","contentHTML","contentMarkdown","handleSaveContentMarkdown","hasOldData","state","saveDetailProduct","description","productId","selectedOption","action","EDIT","CREATE","handleChangeSelect","res","errCode","data","Markdown","markdown","handleOnChangeDesc","event","target","listProduct","componentDidMount","fetchAllDetailProduct","componentDidUpdate","prevProps","prevState","snapshot","allDetailProduct","dataSelect","render","height","mapStateToProps","product","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageProduct.scss\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\n// import style manually\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport Select from \"react-select\";\r\nimport { getDetailInforProduct } from \"../../../services/productService\";\r\nimport { CRUD_ACTIONS } from \"../../../utils\";\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      selectedOption: \"\",\r\n      description: \"\",\r\n      listProduct: [],\r\n      hasOldData: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchAllDetailProduct();\r\n  }\r\n\r\n  buildDataInputSelect = (inputData) => {\r\n    let result = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let object = {};\r\n        let label = `${item.name}`;\r\n        object.label = label;\r\n        object.value = item.id;\r\n        result.push(object);\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.allDetailProduct !== this.props.allDetailProduct) {\r\n      let dataSelect = this.buildDataInputSelect(this.props.allDetailProduct);\r\n      this.setState({\r\n        listProduct: dataSelect,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Finish!\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentHTML: html,\r\n      contentMarkdown: text,\r\n      // contentHTML: text,\r\n    });\r\n  };\r\n\r\n  handleSaveContentMarkdown = () => {\r\n    let { hasOldData } = this.state;\r\n    this.props.saveDetailProduct({\r\n      contentHTML: this.state.contentHTML,\r\n      contentMarkdown: this.state.contentMarkdown,\r\n      description: this.state.description,\r\n      productId: this.state.selectedOption.value,\r\n      action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n    });\r\n\r\n    this.setState({\r\n      selectedOption: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      description: \"\",\r\n      hasOldData: false,\r\n      productId: \"\",\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    let res = await getDetailInforProduct(selectedOption.value);\r\n    if (res && res.errCode === 0 && res.data && res.data.Markdown) {\r\n      let markdown = res.data.Markdown;\r\n      this.setState({\r\n        contentHTML: markdown.contentHTML,\r\n        contentMarkdown: markdown.contentMarkdown,\r\n        description: markdown.description,\r\n        hasOldData: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        contentHTML: \"\",\r\n        contentMarkdown: \"\",\r\n        description: \"\",\r\n        hasOldData: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnChangeDesc = (event) => {\r\n    this.setState({\r\n      description: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { hasOldData } = this.state;\r\n    return (\r\n      <div className=\"manage-product-container\">\r\n        <div className=\"title\">Thêm thông tin sản phẩm</div>\r\n        <div className=\"more-info\">\r\n          <div className=\"content-left form-group\">\r\n            <label>Chọn sản phẩm</label>\r\n            <Select\r\n              value={this.state.selectedOption}\r\n              onChange={this.handleChangeSelect}\r\n              options={this.state.listProduct}\r\n            />\r\n          </div>\r\n\r\n          {/* <div className=\"content-right form-group\">\r\n                        <label>Thông tin giới thiệu</label>\r\n                        <textarea className=\"form-control\" rows=\"4\"\r\n                            onChange={(event) => this.handleOnChangeDesc(event)}\r\n                            value={this.state.description}\r\n                        ></textarea>\r\n                    </div> */}\r\n        </div>\r\n        <div className=\"manage-product-edit\">\r\n          <MdEditor\r\n            style={{ height: \"500px\" }}\r\n            renderHTML={(text) => mdParser.render(text)}\r\n            onChange={this.handleEditorChange}\r\n            value={this.state.contentMarkdown}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={() =>\r\n            this.handleSaveContentMarkdown()\r\n          }\r\n          className={\r\n            hasOldData === true\r\n              ? \"save-detail-product\"\r\n              : \"create-detail-product\"\r\n          }\r\n        >\r\n          {hasOldData === true ? (\r\n            <span>Lưu thông tin</span>\r\n          ) : (\r\n            <span>Tạo thông tin</span>\r\n          )}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allDetailProduct: state.product.allDetailProduct,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllDetailProduct: (id) => dispatch(actions.fetchAllDetailProduct()),\r\n    saveDetailProduct: (data) => dispatch(actions.saveDetailProduct(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageProduct);\r\n"]},"metadata":{},"sourceType":"module"}