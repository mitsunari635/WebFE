{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService, createNewProductFunc, getAllProducts, deleteProductFunc, editProductFunc, getRollPaperService, getPhotoPaperService, getPerforatedPaperService, getPrintedPaperService, getPrintedFormService, getPrintedRollService, getEnvelopeService, getPackageService, getAllDetailProduct, saveDetailProductService, getAllProductPageService, getLabelStampService, getDocumentService, getImportExportService, getStampService, getSeaAirBillService, getExpressService, getPaycheckService, getAtmBillService, getEdcBillService, getOtherPrintService } from \"../../services/productService\";\nimport { toast } from \"react-toastify\";\nexport const fetchStockStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_STOCK_START\n      });\n      let res = await getAllCodeService(\"STOCK\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchStockSuccess(res.data));\n      } else {\n        dispatch(fetchStockFailed());\n      }\n    } catch (e) {\n      dispatch(fetchStockFailed());\n      console.log(\"fetchStockStart error\", e);\n    }\n  };\n};\nexport const fetchStockSuccess = stockData => ({\n  type: actionTypes.FETCH_STOCK_SUCCESS,\n  data: stockData\n});\nexport const fetchStockFailed = () => ({\n  type: actionTypes.FETCH_STOCK_FAILED\n});\nexport const createNewProduct = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await createNewProductFunc(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Tạo sản phẩm thành công\");\n        dispatch(saveProductSuccess());\n        dispatch(fetchAllProductStart());\n      } else {\n        dispatch(saveProductFailed());\n      }\n    } catch (e) {\n      dispatch(saveProductFailed());\n      console.log(\"saveProductFailed error\", e);\n    }\n  };\n};\nexport const saveProductSuccess = () => ({\n  type: actionTypes.CREATE_PRODUCT_SUCCESS\n});\nexport const saveProductFailed = () => ({\n  type: actionTypes.CREATE_PRODUCT_FAILED\n});\nexport const fetchAllProductStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllProducts(\"ALL\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchAllProductSuccess(res.products));\n      } else {\n        toast.success(\"Lấy sản phẩm thất bại\");\n        dispatch(fetchAllProductFailed());\n      }\n    } catch (e) {\n      toast.success(\"Lấy sản phẩm thất bại\");\n      dispatch(fetchAllProductFailed());\n      console.log(\"fetchAllProductFailed error\", e);\n    }\n  };\n};\nexport const fetchAllProductSuccess = data => ({\n  type: actionTypes.FETCH_ALL_PRODUCT_SUCCESS,\n  products: data\n});\nexport const fetchAllProductFailed = () => ({\n  type: actionTypes.FETCH_ALL_PRODUCT_FAILED\n});\nexport const deleteProduct = productId => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await deleteProductFunc(productId);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Xóa sản phẩm thành công\");\n        dispatch(deleteProductSuccess());\n        dispatch(fetchAllProductStart());\n      } else {\n        toast.error(\"Xóa sản phẩm thất bại\");\n        dispatch(deleteProductFailed());\n      }\n    } catch (e) {\n      dispatch(deleteProductFailed());\n      console.log(\"deleteProductFailed error\", e);\n    }\n  };\n};\nexport const deleteProductSuccess = () => ({\n  type: actionTypes.DELETE_PRODUCT_SUCCESS\n});\nexport const deleteProductFailed = () => ({\n  type: actionTypes.DELETE_PRODUCT_FAILED\n});\nexport const editProduct = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await editProductFunc(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Cập nhật sản phẩm thành công\");\n        dispatch(editProductSuccess());\n        dispatch(fetchAllProductStart());\n      } else {\n        toast.error(\"Cập nhật sản phẩm thất bại\");\n        dispatch(editProductFailed());\n      }\n    } catch (e) {\n      toast.error(\"Cập nhật sản phẩm thất bại\");\n      dispatch(editProductFailed());\n      console.log(\"editProductFailed error\", e);\n    }\n  };\n};\nexport const editProductSuccess = () => ({\n  type: actionTypes.EDIT_PRODUCT_SUCCESS\n});\nexport const editProductFailed = () => ({\n  type: actionTypes.EDIT_PRODUCT_FAILED\n});\nexport const fetchRollPaper = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getRollPaperService(20);\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_ROLL_PAPER_SUCCESS,\n          dataRollPaper: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_ROLL_PAPER_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch roll paper failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_ROLL_PAPER_FAILED\n      });\n    }\n  };\n};\nexport const fetchPhotoPaper = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getPhotoPaperService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_PHOTO_PAPER_SUCCESS,\n          dataPhotoPaper: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_PHOTO_PAPER_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch roll paper failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_PHOTO_PAPER_FAILED\n      });\n    }\n  };\n};\nexport const fetchPerforatedPaper = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getPerforatedPaperService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_PERFORATED_PAPER_SUCCESS,\n          dataPerforatedPaper: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_PERFORATED_PAPER_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch roll paper failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_PERFORATED_PAPER_FAILED\n      });\n    }\n  };\n};\nexport const fetchPrintedPaper = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getPrintedPaperService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_PRINTED_PAPER_SUCCESS,\n          dataPrintedPaper: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_PRINTED_PAPER_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch printed paper failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_PRINTED_PAPER_FAILED\n      });\n    }\n  };\n};\nexport const fetchPrintedForm = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getPrintedFormService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_PRINTED_FORM_SUCCESS,\n          dataPrintedForm: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_PRINTED_FORM_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch printed form failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_PRINTED_FORM_FAILED\n      });\n    }\n  };\n};\nexport const fetchPrintedRoll = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getPrintedRollService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_PRINTED_ROLL_SUCCESS,\n          dataPrintedRoll: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_PRINTED_ROLL_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch printed roll failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_PRINTED_ROLL_FAILED\n      });\n    }\n  };\n};\nexport const fetchPackage = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getPackageService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_PACKAGE_SUCCESS,\n          dataPackage: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_PACKAGE_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_PACKAGE_FAILED\n      });\n    }\n  };\n};\nexport const fetchEnvelope = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getEnvelopeService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_ENVELOPE_SUCCESS,\n          dataEnvelope: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_ENVELOPE_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_ENVELOPE_FAILED\n      });\n    }\n  };\n};\nexport const fetchLabelStamp = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getLabelStampService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_LABEL_STAMP_SUCCESS,\n          dataLabel: res.data,\n          dataStamp: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_LABEL_STAMP_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_LABEL_STAMP_FAILED\n      });\n    }\n  };\n};\nexport const fetchDocument = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getDocumentService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_DOCUMENT_SUCCESS,\n          dataDocument: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_DOCUMENT_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_DOCUMENT_FAILED\n      });\n    }\n  };\n};\nexport const fetchImportExport = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getImportExportService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_IMPORT_EXPORT_SUCCESS,\n          dataImport: res.data,\n          dataExport: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_IMPORT_EXPORT_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_IMPORT_EXPORT_FAILED\n      });\n    }\n  };\n};\nexport const fetchExpress = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getExpressService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_EXPRESS_SUCCESS,\n          dataExpress: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_EXPRESS_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_EXPRESS_FAILED\n      });\n    }\n  };\n};\nexport const fetchSeaAirBill = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getSeaAirBillService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_SEA_AIR_BILL_SUCCESS,\n          dataSeaBill: res.data,\n          dataAirBill: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_SEA_AIR_BILL_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_SEA_AIR_BILL_FAILED\n      });\n    }\n  };\n};\nexport const fetchPaycheck = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getPaycheckService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_PAYCHECK_SUCCESS,\n          dataPaycheck: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_PAYCHECK_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_PAYCHECK_FAILED\n      });\n    }\n  };\n};\nexport const fetchAtmBill = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAtmBillService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_ATM_BILL_SUCCESS,\n          dataAtmBill: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_ATM_BILL_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_ATM_BILL_FAILED\n      });\n    }\n  };\n};\nexport const fetchEdcBill = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getEdcBillService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_EDC_BILL_SUCCESS,\n          dataEdcBill: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_EDC_BILL_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_EDC_BILL_FAILED\n      });\n    }\n  };\n};\nexport const fetchOtherPrint = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getOtherPrintService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_OTHER_PRINT_SUCCESS,\n          dataOtherPrint: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_OTHER_PRINT_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_OTHER_PRINT_FAILED\n      });\n    }\n  };\n};\nexport const fetchStamp = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getStampService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_STAMP_SUCCESS,\n          dataStamp: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_STAMP_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch label failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_STAMP_FAILED\n      });\n    }\n  };\n};\nexport const fetchAllProductPage = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllProductPageService(\"\");\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_ALL_PRODUCT_PAGE_SUCCESS,\n          dataAllProduct: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_ALL_PRODUCT_PAGE_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch roll paper failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_ALL_PRODUCT_PAGE_FAILED\n      });\n    }\n  };\n};\nexport const fetchAllDetailProduct = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllDetailProduct();\n\n      if (res && res.errCode === 0) {\n        dispatch({\n          type: actionTypes.FETCH_ALL_DETAIL_PRODUCT_SUCCESS,\n          dataAllDetailProduct: res.data\n        });\n      } else {\n        dispatch({\n          type: actionTypes.FETCH_ALL_DETAIL_PRODUCT_FAILED\n        });\n      }\n    } catch (e) {\n      console.log(\"Fetch all detail product failed: \", e);\n      dispatch({\n        type: actionTypes.FETCH_ALL_DETAIL_PRODUCT_FAILED\n      });\n    }\n  };\n};\nexport const saveDetailProduct = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await saveDetailProductService(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Save detail product success\");\n        dispatch({\n          type: actionTypes.SAVE_DETAIL_PRODUCT_SUCCESS\n        });\n      } else {\n        toast.error(\"Save detail product fail\");\n        dispatch({\n          type: actionTypes.SAVE_DETAIL_PRODUCT_FAILED\n        });\n      }\n    } catch (e) {\n      toast.error(\"Save detail product fail\");\n      dispatch({\n        type: actionTypes.SAVE_DETAIL_PRODUCT_FAILED\n      });\n    }\n  };\n}; // let res1 = await getProductHomeService('');","map":{"version":3,"sources":["D:/LienSon/LienSon-FE/src/store/actions/productActions.js"],"names":["actionTypes","getAllCodeService","createNewProductFunc","getAllProducts","deleteProductFunc","editProductFunc","getRollPaperService","getPhotoPaperService","getPerforatedPaperService","getPrintedPaperService","getPrintedFormService","getPrintedRollService","getEnvelopeService","getPackageService","getAllDetailProduct","saveDetailProductService","getAllProductPageService","getLabelStampService","getDocumentService","getImportExportService","getStampService","getSeaAirBillService","getExpressService","getPaycheckService","getAtmBillService","getEdcBillService","getOtherPrintService","toast","fetchStockStart","dispatch","getState","type","FETCH_STOCK_START","res","errCode","fetchStockSuccess","data","fetchStockFailed","e","console","log","stockData","FETCH_STOCK_SUCCESS","FETCH_STOCK_FAILED","createNewProduct","success","saveProductSuccess","fetchAllProductStart","saveProductFailed","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAILED","fetchAllProductSuccess","products","fetchAllProductFailed","FETCH_ALL_PRODUCT_SUCCESS","FETCH_ALL_PRODUCT_FAILED","deleteProduct","productId","deleteProductSuccess","error","deleteProductFailed","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILED","editProduct","editProductSuccess","editProductFailed","EDIT_PRODUCT_SUCCESS","EDIT_PRODUCT_FAILED","fetchRollPaper","FETCH_ROLL_PAPER_SUCCESS","dataRollPaper","FETCH_ROLL_PAPER_FAILED","fetchPhotoPaper","FETCH_PHOTO_PAPER_SUCCESS","dataPhotoPaper","FETCH_PHOTO_PAPER_FAILED","fetchPerforatedPaper","FETCH_PERFORATED_PAPER_SUCCESS","dataPerforatedPaper","FETCH_PERFORATED_PAPER_FAILED","fetchPrintedPaper","FETCH_PRINTED_PAPER_SUCCESS","dataPrintedPaper","FETCH_PRINTED_PAPER_FAILED","fetchPrintedForm","FETCH_PRINTED_FORM_SUCCESS","dataPrintedForm","FETCH_PRINTED_FORM_FAILED","fetchPrintedRoll","FETCH_PRINTED_ROLL_SUCCESS","dataPrintedRoll","FETCH_PRINTED_ROLL_FAILED","fetchPackage","FETCH_PACKAGE_SUCCESS","dataPackage","FETCH_PACKAGE_FAILED","fetchEnvelope","FETCH_ENVELOPE_SUCCESS","dataEnvelope","FETCH_ENVELOPE_FAILED","fetchLabelStamp","FETCH_LABEL_STAMP_SUCCESS","dataLabel","dataStamp","FETCH_LABEL_STAMP_FAILED","fetchDocument","FETCH_DOCUMENT_SUCCESS","dataDocument","FETCH_DOCUMENT_FAILED","fetchImportExport","FETCH_IMPORT_EXPORT_SUCCESS","dataImport","dataExport","FETCH_IMPORT_EXPORT_FAILED","fetchExpress","FETCH_EXPRESS_SUCCESS","dataExpress","FETCH_EXPRESS_FAILED","fetchSeaAirBill","FETCH_SEA_AIR_BILL_SUCCESS","dataSeaBill","dataAirBill","FETCH_SEA_AIR_BILL_FAILED","fetchPaycheck","FETCH_PAYCHECK_SUCCESS","dataPaycheck","FETCH_PAYCHECK_FAILED","fetchAtmBill","FETCH_ATM_BILL_SUCCESS","dataAtmBill","FETCH_ATM_BILL_FAILED","fetchEdcBill","FETCH_EDC_BILL_SUCCESS","dataEdcBill","FETCH_EDC_BILL_FAILED","fetchOtherPrint","FETCH_OTHER_PRINT_SUCCESS","dataOtherPrint","FETCH_OTHER_PRINT_FAILED","fetchStamp","FETCH_STAMP_SUCCESS","FETCH_STAMP_FAILED","fetchAllProductPage","FETCH_ALL_PRODUCT_PAGE_SUCCESS","dataAllProduct","FETCH_ALL_PRODUCT_PAGE_FAILED","fetchAllDetailProduct","FETCH_ALL_DETAIL_PRODUCT_SUCCESS","dataAllDetailProduct","FETCH_ALL_DETAIL_PRODUCT_FAILED","saveDetailProduct","SAVE_DETAIL_PRODUCT_SUCCESS","SAVE_DETAIL_PRODUCT_FAILED"],"mappings":"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","sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport {\r\n  getAllCodeService,\r\n  createNewProductFunc,\r\n  getAllProducts,\r\n  deleteProductFunc,\r\n  editProductFunc,\r\n  getRollPaperService,\r\n  getPhotoPaperService,\r\n  getPerforatedPaperService,\r\n  getPrintedPaperService,\r\n  getPrintedFormService,\r\n  getPrintedRollService,\r\n  getEnvelopeService,\r\n  getPackageService,\r\n  getAllDetailProduct,\r\n  saveDetailProductService,\r\n  getAllProductPageService,\r\n  getLabelStampService,\r\n  getDocumentService,\r\n  getImportExportService,\r\n  getStampService,\r\n  getSeaAirBillService,\r\n  getExpressService,\r\n  getPaycheckService,\r\n  getAtmBillService,\r\n  getEdcBillService,\r\n  getOtherPrintService,\r\n} from \"../../services/productService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const fetchStockStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_STOCK_START,\r\n      });\r\n\r\n      let res = await getAllCodeService(\"STOCK\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchStockSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchStockFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchStockFailed());\r\n      console.log(\"fetchStockStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchStockSuccess = (stockData) => ({\r\n  type: actionTypes.FETCH_STOCK_SUCCESS,\r\n  data: stockData,\r\n});\r\n\r\nexport const fetchStockFailed = () => ({\r\n  type: actionTypes.FETCH_STOCK_FAILED,\r\n});\r\n\r\nexport const createNewProduct = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await createNewProductFunc(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Tạo sản phẩm thành công\");\r\n        dispatch(saveProductSuccess());\r\n        dispatch(fetchAllProductStart());\r\n      } else {\r\n        dispatch(saveProductFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(saveProductFailed());\r\n      console.log(\"saveProductFailed error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveProductSuccess = () => ({\r\n  type: actionTypes.CREATE_PRODUCT_SUCCESS,\r\n});\r\n\r\nexport const saveProductFailed = () => ({\r\n  type: actionTypes.CREATE_PRODUCT_FAILED,\r\n});\r\n\r\nexport const fetchAllProductStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllProducts(\"ALL\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchAllProductSuccess(res.products));\r\n      } else {\r\n        toast.success(\"Lấy sản phẩm thất bại\");\r\n        dispatch(fetchAllProductFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.success(\"Lấy sản phẩm thất bại\");\r\n      dispatch(fetchAllProductFailed());\r\n      console.log(\"fetchAllProductFailed error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllProductSuccess = (data) => ({\r\n  type: actionTypes.FETCH_ALL_PRODUCT_SUCCESS,\r\n  products: data,\r\n});\r\n\r\nexport const fetchAllProductFailed = () => ({\r\n  type: actionTypes.FETCH_ALL_PRODUCT_FAILED,\r\n});\r\n\r\nexport const deleteProduct = (productId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await deleteProductFunc(productId);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Xóa sản phẩm thành công\");\r\n        dispatch(deleteProductSuccess());\r\n        dispatch(fetchAllProductStart());\r\n      } else {\r\n        toast.error(\"Xóa sản phẩm thất bại\");\r\n        dispatch(deleteProductFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(deleteProductFailed());\r\n      console.log(\"deleteProductFailed error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProductSuccess = () => ({\r\n  type: actionTypes.DELETE_PRODUCT_SUCCESS,\r\n});\r\n\r\nexport const deleteProductFailed = () => ({\r\n  type: actionTypes.DELETE_PRODUCT_FAILED,\r\n});\r\n\r\nexport const editProduct = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await editProductFunc(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Cập nhật sản phẩm thành công\");\r\n        dispatch(editProductSuccess());\r\n        dispatch(fetchAllProductStart());\r\n      } else {\r\n        toast.error(\"Cập nhật sản phẩm thất bại\");\r\n        dispatch(editProductFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Cập nhật sản phẩm thất bại\");\r\n      dispatch(editProductFailed());\r\n      console.log(\"editProductFailed error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const editProductSuccess = () => ({\r\n  type: actionTypes.EDIT_PRODUCT_SUCCESS,\r\n});\r\n\r\nexport const editProductFailed = () => ({\r\n  type: actionTypes.EDIT_PRODUCT_FAILED,\r\n});\r\n\r\nexport const fetchRollPaper = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getRollPaperService(20);\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ROLL_PAPER_SUCCESS,\r\n          dataRollPaper: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ROLL_PAPER_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch roll paper failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_ROLL_PAPER_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPhotoPaper = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getPhotoPaperService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PHOTO_PAPER_SUCCESS,\r\n          dataPhotoPaper: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PHOTO_PAPER_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch roll paper failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_PHOTO_PAPER_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPerforatedPaper = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getPerforatedPaperService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PERFORATED_PAPER_SUCCESS,\r\n          dataPerforatedPaper: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PERFORATED_PAPER_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch roll paper failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_PERFORATED_PAPER_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPrintedPaper = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getPrintedPaperService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PRINTED_PAPER_SUCCESS,\r\n          dataPrintedPaper: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PRINTED_PAPER_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch printed paper failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_PRINTED_PAPER_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPrintedForm = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getPrintedFormService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PRINTED_FORM_SUCCESS,\r\n          dataPrintedForm: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PRINTED_FORM_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch printed form failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_PRINTED_FORM_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPrintedRoll = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getPrintedRollService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PRINTED_ROLL_SUCCESS,\r\n          dataPrintedRoll: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PRINTED_ROLL_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch printed roll failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_PRINTED_ROLL_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPackage = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getPackageService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PACKAGE_SUCCESS,\r\n          dataPackage: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PACKAGE_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_PACKAGE_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchEnvelope = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getEnvelopeService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ENVELOPE_SUCCESS,\r\n          dataEnvelope: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ENVELOPE_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_ENVELOPE_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchLabelStamp = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getLabelStampService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_LABEL_STAMP_SUCCESS,\r\n          dataLabel: res.data,\r\n          dataStamp: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_LABEL_STAMP_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_LABEL_STAMP_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDocument = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getDocumentService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_DOCUMENT_SUCCESS,\r\n          dataDocument: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_DOCUMENT_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_DOCUMENT_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchImportExport = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getImportExportService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_IMPORT_EXPORT_SUCCESS,\r\n          dataImport: res.data,\r\n          dataExport: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_IMPORT_EXPORT_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_IMPORT_EXPORT_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpress = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getExpressService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_EXPRESS_SUCCESS,\r\n          dataExpress: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_EXPRESS_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_EXPRESS_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSeaAirBill = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getSeaAirBillService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_SEA_AIR_BILL_SUCCESS,\r\n          dataSeaBill: res.data,\r\n          dataAirBill: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_SEA_AIR_BILL_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_SEA_AIR_BILL_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPaycheck = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getPaycheckService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PAYCHECK_SUCCESS,\r\n          dataPaycheck: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_PAYCHECK_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_PAYCHECK_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAtmBill = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAtmBillService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ATM_BILL_SUCCESS,\r\n          dataAtmBill: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ATM_BILL_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_ATM_BILL_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchEdcBill = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getEdcBillService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_EDC_BILL_SUCCESS,\r\n          dataEdcBill: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_EDC_BILL_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_EDC_BILL_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchOtherPrint = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getOtherPrintService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_OTHER_PRINT_SUCCESS,\r\n          dataOtherPrint: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_OTHER_PRINT_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_OTHER_PRINT_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchStamp = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getStampService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_STAMP_SUCCESS,\r\n          dataStamp: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_STAMP_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch label failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_STAMP_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllProductPage = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllProductPageService(\"\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_PRODUCT_PAGE_SUCCESS,\r\n          dataAllProduct: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_PRODUCT_PAGE_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch roll paper failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_ALL_PRODUCT_PAGE_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllDetailProduct = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllDetailProduct();\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_DETAIL_PRODUCT_SUCCESS,\r\n          dataAllDetailProduct: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_DETAIL_PRODUCT_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fetch all detail product failed: \", e);\r\n      dispatch({\r\n        type: actionTypes.FETCH_ALL_DETAIL_PRODUCT_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveDetailProduct = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await saveDetailProductService(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Save detail product success\");\r\n        dispatch({\r\n          type: actionTypes.SAVE_DETAIL_PRODUCT_SUCCESS,\r\n        });\r\n      } else {\r\n        toast.error(\"Save detail product fail\");\r\n        dispatch({\r\n          type: actionTypes.SAVE_DETAIL_PRODUCT_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Save detail product fail\");\r\n      dispatch({\r\n        type: actionTypes.SAVE_DETAIL_PRODUCT_FAILED,\r\n      });\r\n    }\r\n  };\r\n};\r\n// let res1 = await getProductHomeService('');\r\n"]},"metadata":{},"sourceType":"module"}