{"ast":null,"code":"var _jsxFileName = \"D:\\\\LienSon\\\\LienSon-FE\\\\src\\\\containers\\\\System\\\\Admin\\\\BannerRedux.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\"; // import \"./BannerRedux.scss\";\n\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport TableManageBanner from \"./TableManageBanner\";\nimport { CRUD_ACTIONS, CommonUtils } from \"../../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BannerRedux extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeImage = async event => {\n      let data = event.target.files;\n      let file = data[0];\n\n      if (file) {\n        let base64 = await CommonUtils.getBase64(file);\n        let objectUrl = URL.createObjectURL(file);\n        this.setState({\n          previewImgUrl: objectUrl,\n          image: base64\n        });\n      }\n    };\n\n    this.openPreviewImage = () => {\n      if (!this.state.previewImgUrl) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.openPreviewSecondImage = () => {\n      if (!this.state.secondPreviewImgUrl) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.openPreviewThirdImage = () => {\n      if (!this.state.thirdPreviewImgUrl) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleSaveBanner = () => {\n      let isValid = this.checkValidateInput();\n      if (isValid === false) return;\n      let {\n        action\n      } = this.state;\n\n      if (action === CRUD_ACTIONS.CREATE) {\n        //fire redux create\n        this.props.createNewBanner({\n          name: this.state.name,\n          image: this.state.image\n        });\n      }\n\n      if (action === CRUD_ACTIONS.EDIT) {\n        //fire redux edit\n        this.props.editBannerRedux({\n          id: this.state.bannerEditId,\n          name: this.state.name,\n          image: this.state.image\n        });\n      }\n    };\n\n    this.checkValidateInput = () => {\n      let isValid = true;\n      let arrCheck = [\"name\"];\n\n      for (let i = 0; i < arrCheck.length; i++) {\n        if (!this.state[arrCheck[i]]) {\n          isValid = false;\n          alert(\"Thông tin không được để trống: \" + arrCheck[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.onChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleEditBannerFromParent = banner => {\n      let imageBase64 = \"\";\n\n      if (banner.image) {\n        imageBase64 = new Buffer.from(banner.image, \"base64\").toString(\"binary\");\n      }\n\n      this.setState({\n        name: banner.name,\n        image: imageBase64,\n        previewImgUrl: imageBase64,\n        action: CRUD_ACTIONS.EDIT,\n        bannerEditId: banner.id\n      });\n    };\n\n    this.state = {\n      previewImgUrl: \"\",\n      name: \"\",\n      image: \"\",\n      action: \"\",\n      bannerEditId: \"\"\n    };\n  }\n\n  async componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.listBanners !== this.props.listBanners) {\n      this.setState({\n        name: \"\",\n        image: \"\",\n        action: CRUD_ACTIONS.CREATE,\n        previewImgUrl: \"\"\n      });\n    }\n  }\n\n  render() {\n    let {\n      name\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Banner-redux-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Qu\\u1EA3n l\\xFD banner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: \"Th\\xEAm banner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"T\\xEAn banner: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: name,\n                onChange: event => {\n                  this.onChangeInput(event, \"name\");\n                } // disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"H\\xECnh \\u1EA3nh 1: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-img-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"previewImg\",\n                  type: \"file\",\n                  hidden: true,\n                  onChange: event => this.handleOnChangeImage(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label-upload\",\n                  htmlFor: \"previewImg\",\n                  children: [\"T\\u1EA3i \\u1EA3nh\", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-img\",\n                  style: {\n                    backgroundImage: `url(${this.state.previewImgUrl})`\n                  },\n                  onClick: () => this.openPreviewImage()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 my-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: this.state.action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\",\n                onClick: () => this.handleSaveBanner(),\n                children: this.state.action === CRUD_ACTIONS.EDIT ? \"Cập nhật\" : \"Lưu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(TableManageBanner, {\n                handleEditBannerFromParent: this.handleEditBannerFromParent,\n                action: this.state.action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), this.state.isOpen === true && /*#__PURE__*/_jsxDEV(Lightbox, {\n        mainSrc: this.state.previewImgUrl,\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listBanners: state.banner.banners\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createNewBanner: data => dispatch(actions.createNewBanner(data)),\n    fetchBannerRedux: () => dispatch(actions.fetchAllBannerStart()),\n    editBannerRedux: data => dispatch(actions.editBanner(data)) // processLogout: () => dispatch(actions.processLogout()),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerRedux);","map":{"version":3,"sources":["D:/LienSon/LienSon-FE/src/containers/System/Admin/BannerRedux.js"],"names":["React","Component","connect","actions","Lightbox","TableManageBanner","CRUD_ACTIONS","CommonUtils","BannerRedux","constructor","props","handleOnChangeImage","event","data","target","files","file","base64","getBase64","objectUrl","URL","createObjectURL","setState","previewImgUrl","image","openPreviewImage","state","isOpen","openPreviewSecondImage","secondPreviewImgUrl","openPreviewThirdImage","thirdPreviewImgUrl","handleSaveBanner","isValid","checkValidateInput","action","CREATE","createNewBanner","name","EDIT","editBannerRedux","id","bannerEditId","arrCheck","i","length","alert","onChangeInput","copyState","value","handleEditBannerFromParent","banner","imageBase64","Buffer","from","toString","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","listBanners","render","backgroundImage","mapStateToProps","banners","mapDispatchToProps","dispatch","fetchBannerRedux","fetchAllBannerStart","editBanner"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions\";\r\n// import \"./BannerRedux.scss\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport TableManageBanner from \"./TableManageBanner\";\r\nimport { CRUD_ACTIONS, CommonUtils } from \"../../../utils\";\r\n\r\nclass BannerRedux extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      previewImgUrl: \"\",\r\n\r\n      name: \"\",\r\n      image: \"\",\r\n\r\n      action: \"\",\r\n      bannerEditId: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.listBanners !== this.props.listBanners) {\r\n      this.setState({\r\n        name: \"\",\r\n        image: \"\",\r\n        action: CRUD_ACTIONS.CREATE,\r\n        previewImgUrl: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnChangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImgUrl: objectUrl,\r\n        image: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  openPreviewImage = () => {\r\n    if (!this.state.previewImgUrl) return;\r\n    this.setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  openPreviewSecondImage = () => {\r\n    if (!this.state.secondPreviewImgUrl) return;\r\n    this.setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  openPreviewThirdImage = () => {\r\n    if (!this.state.thirdPreviewImgUrl) return;\r\n    this.setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  handleSaveBanner = () => {\r\n    let isValid = this.checkValidateInput();\r\n    if (isValid === false) return;\r\n\r\n    let { action } = this.state;\r\n    if (action === CRUD_ACTIONS.CREATE) {\r\n      //fire redux create\r\n      this.props.createNewBanner({\r\n        name: this.state.name,\r\n        image: this.state.image,\r\n      });\r\n    }\r\n\r\n    if (action === CRUD_ACTIONS.EDIT) {\r\n      //fire redux edit\r\n      this.props.editBannerRedux({\r\n        id: this.state.bannerEditId,\r\n        name: this.state.name,\r\n        image: this.state.image,\r\n      });\r\n    }\r\n  };\r\n\r\n  checkValidateInput = () => {\r\n    let isValid = true;\r\n    let arrCheck = [\"name\"];\r\n    for (let i = 0; i < arrCheck.length; i++) {\r\n      if (!this.state[arrCheck[i]]) {\r\n        isValid = false;\r\n        alert(\"Thông tin không được để trống: \" + arrCheck[i]);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  onChangeInput = (event, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = event.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  handleEditBannerFromParent = (banner) => {\r\n    let imageBase64 = \"\";\r\n    if (banner.image) {\r\n      imageBase64 = new Buffer.from(banner.image, \"base64\").toString(\"binary\");\r\n    }\r\n\r\n    this.setState({\r\n      name: banner.name,\r\n      image: imageBase64,\r\n      previewImgUrl: imageBase64,\r\n      action: CRUD_ACTIONS.EDIT,\r\n      bannerEditId: banner.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { name } = this.state;\r\n\r\n    return (\r\n      <div className=\"Banner-redux-container\">\r\n        <div className=\"title\">Quản lý banner</div>\r\n        <div className=\"body\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">Thêm banner</div>\r\n              <div className=\"col-12\">\r\n                <label>Tên banner: </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"name\");\r\n                  }}\r\n                  // disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-3\">\r\n                <label>Hình ảnh 1: </label>\r\n                <div className=\"preview-img-container\">\r\n                  <input\r\n                    id=\"previewImg\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(event) => this.handleOnChangeImage(event)}\r\n                  />\r\n                  <label className=\"label-upload\" htmlFor=\"previewImg\">\r\n                    Tải ảnh<i className=\"fas fa-upload\"></i>\r\n                  </label>\r\n                  <div\r\n                    className=\"preview-img\"\r\n                    style={{\r\n                      backgroundImage: `url(${this.state.previewImgUrl})`,\r\n                    }}\r\n                    onClick={() => this.openPreviewImage()}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 my-3\">\r\n                <button\r\n                  className={\r\n                    this.state.action === CRUD_ACTIONS.EDIT\r\n                      ? \"btn btn-warning\"\r\n                      : \"btn btn-primary\"\r\n                  }\r\n                  onClick={() => this.handleSaveBanner()}\r\n                >\r\n                  {this.state.action === CRUD_ACTIONS.EDIT ? \"Cập nhật\" : \"Lưu\"}\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"col-12\">\r\n                <TableManageBanner\r\n                  handleEditBannerFromParent={this.handleEditBannerFromParent}\r\n                  action={this.state.action}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.isOpen === true && (\r\n          <Lightbox\r\n            mainSrc={this.state.previewImgUrl}\r\n            onCloseRequest={() => this.setState({ isOpen: false })}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listBanners: state.banner.banners,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createNewBanner: (data) => dispatch(actions.createNewBanner(data)),\r\n    fetchBannerRedux: () => dispatch(actions.fetchAllBannerStart()),\r\n    editBannerRedux: (data) => dispatch(actions.editBanner(data)),\r\n    // processLogout: () => dispatch(actions.processLogout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerRedux);\r\n"]},"metadata":{},"sourceType":"module"}