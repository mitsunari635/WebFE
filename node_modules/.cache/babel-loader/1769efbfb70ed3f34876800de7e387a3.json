{"ast":null,"code":"var _jsxFileName = \"D:\\\\LienSon\\\\LienSon-FE\\\\src\\\\containers\\\\Header\\\\Header.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport Navigator from \"../../components/Navigator\";\nimport { adminMenu, employeeMenu } from \"./menuApp\";\nimport \"./Header.scss\";\nimport { USER_ROLE } from \"../../utils/constant\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuApp: []\n    };\n  }\n\n  componentDidMount() {\n    let {\n      userInfo\n    } = this.props;\n    let menu = [];\n\n    if (userInfo && !_.isEmpty(userInfo)) {\n      let role = userInfo.roleId;\n\n      if (role === USER_ROLE.ADMIN) {\n        menu = adminMenu;\n      }\n\n      if (role === USER_ROLE.EMPLOYEE) {\n        menu = employeeMenu;\n      }\n    }\n\n    this.setState({\n      menuApp: menu\n    });\n  }\n\n  render() {\n    const {\n      processLogout,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-tabs-container\",\n        children: /*#__PURE__*/_jsxDEV(Navigator, {\n          menus: this.state.menuApp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-tail\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"welcome\",\n          children: [\"Xin ch\\xE0o, \", userInfo && userInfo.fullName ? userInfo.fullName : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-logout\",\n          onClick: processLogout,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-sign-out-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    userInfo: state.user.userInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    processLogout: () => dispatch(actions.processLogout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["D:/LienSon/LienSon-FE/src/containers/Header/Header.js"],"names":["React","Component","connect","actions","Navigator","adminMenu","employeeMenu","USER_ROLE","_","Header","constructor","props","state","menuApp","componentDidMount","userInfo","menu","isEmpty","role","roleId","ADMIN","EMPLOYEE","setState","render","processLogout","fullName","mapStateToProps","isLoggedIn","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,WAAxC;AACA,OAAO,eAAP;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,CAAP,MAAc,QAAd;;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAC7BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI;AAAEC,MAAAA;AAAF,QAAe,KAAKJ,KAAxB;AACA,QAAIK,IAAI,GAAG,EAAX;;AACA,QAAID,QAAQ,IAAI,CAACP,CAAC,CAACS,OAAF,CAAUF,QAAV,CAAjB,EAAsC;AACpC,UAAIG,IAAI,GAAGH,QAAQ,CAACI,MAApB;;AACA,UAAID,IAAI,KAAKX,SAAS,CAACa,KAAvB,EAA8B;AAC5BJ,QAAAA,IAAI,GAAGX,SAAP;AACD;;AACD,UAAIa,IAAI,KAAKX,SAAS,CAACc,QAAvB,EAAiC;AAC/BL,QAAAA,IAAI,GAAGV,YAAP;AACD;AACF;;AACD,SAAKgB,QAAL,CAAc;AACZT,MAAAA,OAAO,EAAEG;AADG,KAAd;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,aAAF;AAAiBT,MAAAA;AAAjB,QAA8B,KAAKJ,KAAzC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,sCACaE,QAAQ,IAAIA,QAAQ,CAACU,QAArB,GAAgCV,QAAQ,CAACU,QAAzC,GAAoD,EADjE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,OAAO,EAAED,aAAzC;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA/C4B;;AAkD/B,MAAME,eAAe,GAAId,KAAD,IAAW;AACjC,SAAO;AACLe,IAAAA,UAAU,EAAEf,KAAK,CAACgB,IAAN,CAAWD,UADlB;AAELZ,IAAAA,QAAQ,EAAEH,KAAK,CAACgB,IAAN,CAAWb;AAFhB,GAAP;AAID,CALD;;AAOA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLN,IAAAA,aAAa,EAAE,MAAMM,QAAQ,CAAC3B,OAAO,CAACqB,aAAR,EAAD;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAetB,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,MAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from \"../../components/Navigator\";\r\nimport { adminMenu, employeeMenu } from \"./menuApp\";\r\nimport \"./Header.scss\";\r\nimport { USER_ROLE } from \"../../utils/constant\";\r\nimport _ from \"lodash\";\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuApp: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { userInfo } = this.props;\r\n    let menu = [];\r\n    if (userInfo && !_.isEmpty(userInfo)) {\r\n      let role = userInfo.roleId;\r\n      if (role === USER_ROLE.ADMIN) {\r\n        menu = adminMenu;\r\n      }\r\n      if (role === USER_ROLE.EMPLOYEE) {\r\n        menu = employeeMenu;\r\n      }\r\n    }\r\n    this.setState({\r\n      menuApp: menu,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { processLogout, userInfo } = this.props;\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        {/* thanh navigator */}\r\n        <div className=\"header-tabs-container\">\r\n          <Navigator menus={this.state.menuApp} />\r\n        </div>\r\n\r\n        <div className=\"header-tail\">\r\n          <span className=\"welcome\">\r\n            Xin chào, {userInfo && userInfo.fullName ? userInfo.fullName : \"\"}\r\n          </span>\r\n\r\n          <div className=\"btn btn-logout\" onClick={processLogout}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n          </div>\r\n        </div>\r\n        {/* nút logout */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n"]},"metadata":{},"sourceType":"module"}