{"ast":null,"code":"export function expiresAt(expiresIn) {\n  const timeNow = Math.round(Date.now() / 1000);\n  return timeNow + expiresIn;\n}\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\n\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false;\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false;\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false;\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable;\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`;\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey);\n    globalThis.localStorage.removeItem(randomKey);\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = true;\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n    localStorageWriteTests.tested = true;\n    localStorageWriteTests.writable = false;\n  }\n\n  return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\n\nexport function parseParametersFromURL(href) {\n  const result = {};\n  const url = new URL(href);\n\n  if (url.hash && url.hash[0] === '#') {\n    try {\n      const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n      hashSearchParams.forEach((value, key) => {\n        result[key] = value;\n      });\n    } catch (e) {// hash is not a query string\n    }\n  } // search parameters take precedence over hash parameters\n\n\n  url.searchParams.forEach((value, key) => {\n    result[key] = value;\n  });\n  return result;\n}\nexport const resolveFetch = customFetch => {\n  let _fetch;\n\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) => import('@supabase/node-fetch').then(({\n      default: fetch\n    }) => fetch(...args));\n  } else {\n    _fetch = fetch;\n  }\n\n  return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = maybeResponse => {\n  return typeof maybeResponse === 'object' && maybeResponse !== null && 'status' in maybeResponse && 'ok' in maybeResponse && 'json' in maybeResponse && typeof maybeResponse.json === 'function';\n}; // Storage helpers\n\nexport const setItemAsync = async (storage, key, data) => {\n  await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n  const value = await storage.getItem(key);\n\n  if (!value) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(value);\n  } catch (_a) {\n    return value;\n  }\n};\nexport const removeItemAsync = async (storage, key) => {\n  await storage.removeItem(key);\n};\nexport function decodeBase64URL(value) {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let base64 = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  value = value.replace('-', '+').replace('_', '/');\n\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++));\n    enc2 = key.indexOf(value.charAt(i++));\n    enc3 = key.indexOf(value.charAt(i++));\n    enc4 = key.indexOf(value.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    base64 = base64 + String.fromCharCode(chr1);\n\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2);\n    }\n\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3);\n    }\n  }\n\n  return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\n\nexport class Deferred {\n  constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n    this.promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n}\nDeferred.promiseConstructor = Promise; // Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\n\nexport function decodeJWTPayload(token) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n  const parts = token.split('.');\n\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure');\n  }\n\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format');\n  }\n\n  const base64Url = parts[1];\n  return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\n\nexport async function sleep(time) {\n  return await new Promise(accept => {\n    setTimeout(() => accept(null), time);\n  });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\n\nexport function retryable(fn, isRetryable) {\n  const promise = new Promise((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;\n\n    (async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt);\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result);\n            return;\n          }\n        } catch (e) {\n          if (!isRetryable(attempt, e)) {\n            reject(e);\n            return;\n          }\n        }\n      }\n    })();\n  });\n  return promise;\n}\n\nfunction dec2hex(dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n} // Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\n\n\nexport function generatePKCEVerifier() {\n  const verifierLength = 56;\n  const array = new Uint32Array(verifierLength);\n\n  if (typeof crypto === 'undefined') {\n    const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n    const charSetLen = charSet.length;\n    let verifier = '';\n\n    for (let i = 0; i < verifierLength; i++) {\n      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n    }\n\n    return verifier;\n  }\n\n  crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\n\nasync function sha256(randomString) {\n  const encoder = new TextEncoder();\n  const encodedData = encoder.encode(randomString);\n  const hash = await crypto.subtle.digest('SHA-256', encodedData);\n  const bytes = new Uint8Array(hash);\n  return Array.from(bytes).map(c => String.fromCharCode(c)).join('');\n}\n\nfunction base64urlencode(str) {\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\nexport async function generatePKCEChallenge(verifier) {\n  if (typeof crypto === 'undefined') {\n    console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n    return verifier;\n  }\n\n  const hashed = await sha256(verifier);\n  return base64urlencode(hashed);\n}","map":{"version":3,"sources":["../../../src/lib/helpers.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key) => {\n                result[key] = value;\n            });\n        }\n        catch (e) {\n            // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n        result[key] = value;\n    });\n    return result;\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n};\nexport function decodeBase64URL(value) {\n    const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let base64 = '';\n    let chr1, chr2, chr3;\n    let enc1, enc2, enc3, enc4;\n    let i = 0;\n    value = value.replace('-', '+').replace('_', '/');\n    while (i < value.length) {\n        enc1 = key.indexOf(value.charAt(i++));\n        enc2 = key.indexOf(value.charAt(i++));\n        enc3 = key.indexOf(value.charAt(i++));\n        enc4 = key.indexOf(value.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        base64 = base64 + String.fromCharCode(chr1);\n        if (enc3 != 64 && chr2 != 0) {\n            base64 = base64 + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64 && chr3 != 0) {\n            base64 = base64 + String.fromCharCode(chr3);\n        }\n    }\n    return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n    // Regex checks for base64url format\n    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new Error('JWT is not valid: not a JWT structure');\n    }\n    if (!base64UrlRegex.test(parts[1])) {\n        throw new Error('JWT is not valid: payload is not in base64url format');\n    }\n    const base64Url = parts[1];\n    return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n    return await new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async () => {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes)\n        .map((c) => String.fromCharCode(c))\n        .join('');\n}\nfunction base64urlencode(str) {\n    return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generatePKCEChallenge(verifier) {\n    if (typeof crypto === 'undefined') {\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return base64urlencode(hashed);\n}\n//# sourceMappingURL=helpers.js.map"]},"metadata":{},"sourceType":"module"}