{"ast":null,"code":"var _jsxFileName = \"D:\\\\LienSon\\\\LienSon-FE\\\\src\\\\containers\\\\System\\\\Admin\\\\TableManageProduct.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./TableManageProduct.scss\";\nimport * as actions from \"../../../store/actions\"; // import style manually\n\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport Select from \"react-select\"; // Finish!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TableManageProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteProduct = product => {\n      this.props.deleteProductRedux(product.id);\n    };\n\n    this.handleEditProduct = product => {\n      this.props.handleEditProductFromParent(product);\n    };\n\n    this.state = {\n      productsRedux: [],\n      thType: \"Loại giấy\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProductRedux();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.listProducts !== this.props.listProducts) {\n      this.setState({\n        productsRedux: this.props.listProducts\n      });\n    }\n  }\n\n  // changeType = () => {\n  //   let typeOrder = [\"Loại giấy\", \"Cuộn\", \"Đllt\", \"Photo\"]; // Define the order of values\n  //   let currentIndex = typeOrder.findIndex((type) => type === this.state.thType); // Get the current index of the current value\n  //   let nextIndex = (currentIndex + 1) % typeOrder.length; // Calculate the index of the next value\n  //   let nextValue = typeOrder[nextIndex]; // Get the next value based on the index\n  //   this.setState({\n  //     thType: nextValue,\n  //   })\n  // }\n  render() {\n    let customStyles = {\n      control: provided => ({ ...provided,\n        width: \"100%\",\n        height: \"100%\",\n        padding: 0,\n        margin: 0,\n        border: \"none\",\n        backgroundColor: \"white\",\n        background: \"white\",\n        color: \"black\"\n      })\n    };\n    let typeOrder = [\"Loại giấy\", \"Cuộn\", \"Đllt\", \"Photo\", \"In\", \"Tem\", \"Nhãn\", \"Chứng từ\", \"Phiếu xuất kho\", \"Phiếu nhập kho\", \"Bill chuyển phát nhanh\", \"Bill sea\", \"Bill air\", \"Hóa đơn atm\", \"Hóa đơn edc\", \"Phiếu lương\", \"Khác\", \"Cuộn in\"]; // Define the order of values\n\n    let arrProducts = this.state.productsRedux;\n\n    if (this.state.thType.toLowerCase() !== \"loại giấy\") {\n      arrProducts = arrProducts.filter(item => item.type.toLowerCase() === this.state.thType.toLowerCase());\n    }\n\n    arrProducts.sort((a, b) => a.type.localeCompare(b.type));\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"TableManageProduct\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gi\\xE1 ni\\xEAm y\\u1EBFt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gi\\xE1 khuy\\u1EBFn m\\xE3i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                className: \"typeSelector\",\n                styles: customStyles,\n                options: typeOrder.map(type => ({\n                  value: type,\n                  label: type\n                })),\n                value: {\n                  value: this.state.thType,\n                  label: this.state.thType\n                },\n                onChange: selectedOption => this.setState({\n                  thType: selectedOption.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0110\\u01A1n v\\u1ECB t\\xEDnh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Kho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"H\\xE0nh \\u0111\\u1ED9ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), arrProducts && arrProducts.length > 0 && arrProducts.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.discount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.describe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.stockId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  ref: this.myRef,\n                  onClick: () => this.handleEditProduct(item),\n                  className: \"btn-edit\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-pencil-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.handleDeleteProduct(item),\n                  className: \"btn-delete\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listProducts: state.product.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProductRedux: () => dispatch(actions.fetchAllProductStart()),\n    deleteProductRedux: id => dispatch(actions.deleteProduct(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageProduct);","map":{"version":3,"sources":["D:/LienSon/LienSon-FE/src/containers/System/Admin/TableManageProduct.js"],"names":["React","Component","connect","actions","Select","TableManageProduct","constructor","props","handleDeleteProduct","product","deleteProductRedux","id","handleEditProduct","handleEditProductFromParent","state","productsRedux","thType","componentDidMount","fetchProductRedux","componentDidUpdate","prevProps","prevState","snapshot","listProducts","setState","render","customStyles","control","provided","width","height","padding","margin","border","backgroundColor","background","color","typeOrder","arrProducts","toLowerCase","filter","item","type","sort","a","b","localeCompare","map","value","label","selectedOption","length","index","name","price","discount","describe","stockId","myRef","mapStateToProps","products","mapDispatchToProps","dispatch","fetchAllProductStart","deleteProduct"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TableManageProduct.scss\";\r\nimport * as actions from \"../../../store/actions\";\r\n// import style manually\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport Select from \"react-select\";\r\n\r\n// Finish!\r\n\r\nclass TableManageProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productsRedux: [],\r\n      thType: \"Loại giấy\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchProductRedux();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.listProducts !== this.props.listProducts) {\r\n      this.setState({\r\n        productsRedux: this.props.listProducts,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDeleteProduct = (product) => {\r\n    this.props.deleteProductRedux(product.id);\r\n  };\r\n\r\n  handleEditProduct = (product) => {\r\n    this.props.handleEditProductFromParent(product);\r\n  };\r\n\r\n  // changeType = () => {\r\n  //   let typeOrder = [\"Loại giấy\", \"Cuộn\", \"Đllt\", \"Photo\"]; // Define the order of values\r\n  //   let currentIndex = typeOrder.findIndex((type) => type === this.state.thType); // Get the current index of the current value\r\n  //   let nextIndex = (currentIndex + 1) % typeOrder.length; // Calculate the index of the next value\r\n  //   let nextValue = typeOrder[nextIndex]; // Get the next value based on the index\r\n  //   this.setState({\r\n  //     thType: nextValue,\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    let customStyles = {\r\n      control: (provided) => ({\r\n        ...provided,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        padding: 0,\r\n        margin: 0,\r\n        border: \"none\",\r\n        backgroundColor: \"white\",\r\n        background: \"white\",\r\n        color: \"black\",\r\n      }),\r\n    };\r\n\r\n    let typeOrder = [\r\n      \"Loại giấy\",\r\n      \"Cuộn\",\r\n      \"Đllt\",\r\n      \"Photo\",\r\n      \"In\",\r\n      \"Tem\",\r\n      \"Nhãn\",\r\n      \"Chứng từ\",\r\n      \"Phiếu xuất kho\",\r\n      \"Phiếu nhập kho\",\r\n      \"Bill chuyển phát nhanh\",\r\n      \"Bill sea\",\r\n      \"Bill air\",\r\n      \"Hóa đơn atm\",\r\n      \"Hóa đơn edc\",\r\n      \"Phiếu lương\",\r\n      \"Khác\",\r\n      \"Cuộn in\",\r\n    ]; // Define the order of values\r\n\r\n    let arrProducts = this.state.productsRedux;\r\n    if (this.state.thType.toLowerCase() !== \"loại giấy\") {\r\n      arrProducts = arrProducts.filter(\r\n        (item) => item.type.toLowerCase() === this.state.thType.toLowerCase()\r\n      );\r\n    }\r\n    arrProducts.sort((a, b) => a.type.localeCompare(b.type));\r\n    return (\r\n      <React.Fragment>\r\n        <table id=\"TableManageProduct\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Tên sản phẩm</th>\r\n              <th>Giá niêm yết</th>\r\n              <th>Giá khuyến mãi</th>\r\n              <th>\r\n                <Select\r\n                  className=\"typeSelector\"\r\n                  styles={customStyles}\r\n                  options={typeOrder.map((type) => ({\r\n                    value: type,\r\n                    label: type,\r\n                  }))}\r\n                  value={{ value: this.state.thType, label: this.state.thType }}\r\n                  onChange={(selectedOption) =>\r\n                    this.setState({ thType: selectedOption.value })\r\n                  }\r\n                />\r\n              </th>\r\n              <th>Đơn vị tính</th>\r\n              <th>Kho</th>\r\n              <th>Hành động</th>\r\n            </tr>\r\n\r\n            {arrProducts &&\r\n              arrProducts.length > 0 &&\r\n              arrProducts.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.price}</td>\r\n                    <td>{item.discount}</td>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.describe}</td>\r\n                    <td>{item.stockId}</td>\r\n                    <td>\r\n                      <button\r\n                        ref={this.myRef}\r\n                        onClick={() => this.handleEditProduct(item)}\r\n                        className=\"btn-edit\"\r\n                      >\r\n                        <i className=\"fas fa-pencil-alt\"></i>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => this.handleDeleteProduct(item)}\r\n                        className=\"btn-delete\"\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listProducts: state.product.products,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProductRedux: () => dispatch(actions.fetchAllProductStart()),\r\n    deleteProductRedux: (id) => dispatch(actions.deleteProduct(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageProduct);\r\n"]},"metadata":{},"sourceType":"module"}