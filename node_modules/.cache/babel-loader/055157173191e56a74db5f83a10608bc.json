{"ast":null,"code":"import actionTypes from './actionTypes';\nimport { getAllCodeService, createNewUserFunc, getAllUsers, deleteUserFunc, editUserFunc } from '../../services/userService';\nimport { toast } from \"react-toastify\"; // export const fetchGenderStart = () => ({\n//     type: actionTypes.FETCH_GENDER_START\n// })\n\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_GENDER_START\n      });\n      let res = await getAllCodeService(\"GENDER\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchGenderSuccess(res.data));\n      } else {\n        dispatch(fetchGenderFailed());\n      }\n    } catch (e) {\n      dispatch(fetchGenderFailed());\n      console.log('fetchGenderStart error', e);\n    }\n  };\n};\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAILED\n});\nexport const fetchPositionStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"POSITION\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchPositionSuccess(res.data));\n      } else {\n        dispatch(fetchPositionFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPositionFailed());\n      console.log('fetchPositionFailed error: ', e);\n    }\n  };\n};\nexport const fetchPositionSuccess = positionData => ({\n  type: actionTypes.FETCH_POSITION_SUCCESS,\n  data: positionData\n});\nexport const fetchPositionFailed = () => ({\n  type: actionTypes.FETCH_POSITION_FAILED\n});\nexport const fetchRoleStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"ROLE\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchRoleSuccess(res.data));\n      } else {\n        dispatch(fetchRoleFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPositionFailed());\n      console.log('fetchRoleFailed error', e);\n    }\n  };\n};\nexport const fetchRoleSuccess = roleData => ({\n  type: actionTypes.FETCH_ROLE_SUCCESS,\n  data: roleData\n});\nexport const fetchRoleFailed = () => ({\n  type: actionTypes.FETCH_ROLE_FAILED\n});\nexport const createNewUser = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await createNewUserFunc(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Tạo người dùng thành công\");\n        dispatch(saveUserSuccess());\n        dispatch(fetchAllUserStart());\n      } else {\n        dispatch(saveUserFailed());\n      }\n    } catch (e) {\n      dispatch(saveUserFailed());\n      console.log('saveUserFailed error', e);\n    }\n  };\n};\nexport const saveUserSuccess = () => ({\n  type: actionTypes.CREATE_USER_SUCCESS\n});\nexport const saveUserFailed = () => ({\n  type: actionTypes.CREATE_USER_FAILED\n});\nexport const fetchAllUserStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllUsers(\"ALL\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchAllUserSuccess(res.users));\n      } else {\n        toast.success(\"Lấy người dùng thất bại\");\n        dispatch(fetchAllUserFailed());\n      }\n    } catch (e) {\n      toast.success(\"Lấy người dùng thất bại\");\n      dispatch(fetchAllUserFailed());\n      console.log('fetchAllUserFailed error', e);\n    }\n  };\n};\nexport const fetchAllUserSuccess = data => ({\n  type: actionTypes.FETCH_ALL_USER_SUCCESS,\n  users: data\n});\nexport const fetchAllUserFailed = () => ({\n  type: actionTypes.FETCH_ALL_USER_FAILED\n});\nexport const deleteUser = userId => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await deleteUserFunc(userId);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Xóa người dùng thành công\");\n        dispatch(deleteUserSuccess());\n        dispatch(fetchAllUserStart());\n      } else {\n        toast.error(\"Xóa người dùng thất bại\");\n        dispatch(deleteUserFailed());\n      }\n    } catch (e) {\n      dispatch(deleteUserFailed());\n      console.log('deleteUserFailed error', e);\n    }\n  };\n};\nexport const deleteUserSuccess = () => ({\n  type: actionTypes.DELETE_USER_SUCCESS\n});\nexport const deleteUserFailed = () => ({\n  type: actionTypes.DELETE_USER_FAILED\n});\nexport const editUser = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await editUserFunc(data);\n\n      if (res && res.errCode === 0) {\n        toast.success(\"Cập nhật người dùng thành công\");\n        dispatch(editUserSuccess());\n        dispatch(fetchAllUserStart());\n      } else {\n        toast.error(\"Cập nhật người dùng thất bại\");\n        dispatch(editUserFailed());\n      }\n    } catch (e) {\n      toast.error(\"Cập nhật người dùng thất bại\");\n      dispatch(editUserFailed());\n      console.log('editUserFailed error', e);\n    }\n  };\n};\nexport const editUserSuccess = () => ({\n  type: actionTypes.EDIT_USER_SUCCESS\n});\nexport const editUserFailed = () => ({\n  type: actionTypes.EDIT_USER_FAILED\n});","map":{"version":3,"sources":["D:/LienSon/LienSon-FE/src/store/actions/adminActions.js"],"names":["actionTypes","getAllCodeService","createNewUserFunc","getAllUsers","deleteUserFunc","editUserFunc","toast","fetchGenderStart","dispatch","getState","type","FETCH_GENDER_START","res","errCode","fetchGenderSuccess","data","fetchGenderFailed","e","console","log","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","fetchPositionStart","fetchPositionSuccess","fetchPositionFailed","positionData","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","fetchRoleStart","fetchRoleSuccess","fetchRoleFailed","roleData","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","createNewUser","success","saveUserSuccess","fetchAllUserStart","saveUserFailed","CREATE_USER_SUCCESS","CREATE_USER_FAILED","fetchAllUserSuccess","users","fetchAllUserFailed","FETCH_ALL_USER_SUCCESS","FETCH_ALL_USER_FAILED","deleteUser","userId","deleteUserSuccess","error","deleteUserFailed","DELETE_USER_SUCCESS","DELETE_USER_FAILED","editUser","editUserSuccess","editUserFailed","EDIT_USER_SUCCESS","EDIT_USER_FAILED"],"mappings":"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","sourcesContent":["import actionTypes from './actionTypes';\r\nimport { getAllCodeService, createNewUserFunc, getAllUsers, deleteUserFunc, editUserFunc } from '../../services/userService';\r\nimport { toast } from \"react-toastify\";\r\n\r\n// export const fetchGenderStart = () => ({\r\n//     type: actionTypes.FETCH_GENDER_START\r\n// })\r\n\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_GENDER_START\r\n            })\r\n\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(res.data));\r\n            } else {\r\n                dispatch(fetchGenderFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed());\r\n            console.log('fetchGenderStart error', e)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData\r\n})\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED\r\n})\r\n\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data));\r\n            } else {\r\n                dispatch(fetchPositionFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log('fetchPositionFailed error: ', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData\r\n})\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED\r\n})\r\n\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllCodeService(\"ROLE\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchRoleSuccess(res.data));\r\n            } else {\r\n                dispatch(fetchRoleFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log('fetchRoleFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: roleData\r\n})\r\n\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED\r\n})\r\n\r\nexport const createNewUser = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await createNewUserFunc(data);\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Tạo người dùng thành công\");\r\n                dispatch(saveUserSuccess());\r\n                dispatch(fetchAllUserStart());\r\n            } else {\r\n                dispatch(saveUserFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(saveUserFailed());\r\n            console.log('saveUserFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveUserSuccess = () => ({\r\n    type: actionTypes.CREATE_USER_SUCCESS\r\n})\r\n\r\nexport const saveUserFailed = () => ({\r\n    type: actionTypes.CREATE_USER_FAILED\r\n})\r\n\r\nexport const fetchAllUserStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllUsers(\"ALL\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchAllUserSuccess(res.users));\r\n            } else {\r\n                toast.success(\"Lấy người dùng thất bại\");\r\n                dispatch(fetchAllUserFailed());\r\n            }\r\n        } catch (e) {\r\n            toast.success(\"Lấy người dùng thất bại\");\r\n            dispatch(fetchAllUserFailed());\r\n            console.log('fetchAllUserFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllUserSuccess = (data) => ({\r\n    type: actionTypes.FETCH_ALL_USER_SUCCESS,\r\n    users: data\r\n})\r\n\r\nexport const fetchAllUserFailed = () => ({\r\n    type: actionTypes.FETCH_ALL_USER_FAILED\r\n})\r\n\r\nexport const deleteUser = (userId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await deleteUserFunc(userId);\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Xóa người dùng thành công\");\r\n                dispatch(deleteUserSuccess());\r\n                dispatch(fetchAllUserStart());\r\n            } else {\r\n                toast.error(\"Xóa người dùng thất bại\");\r\n                dispatch(deleteUserFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(deleteUserFailed());\r\n            console.log('deleteUserFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserSuccess = () => ({\r\n    type: actionTypes.DELETE_USER_SUCCESS\r\n})\r\n\r\nexport const deleteUserFailed = () => ({\r\n    type: actionTypes.DELETE_USER_FAILED\r\n})\r\n\r\nexport const editUser = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await editUserFunc(data);\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật người dùng thành công\");\r\n                dispatch(editUserSuccess());\r\n                dispatch(fetchAllUserStart());\r\n            } else {\r\n                toast.error(\"Cập nhật người dùng thất bại\");\r\n                dispatch(editUserFailed());\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Cập nhật người dùng thất bại\");\r\n            dispatch(editUserFailed());\r\n            console.log('editUserFailed error', e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const editUserSuccess = () => ({\r\n    type: actionTypes.EDIT_USER_SUCCESS\r\n})\r\n\r\nexport const editUserFailed = () => ({\r\n    type: actionTypes.EDIT_USER_FAILED\r\n})"]},"metadata":{},"sourceType":"module"}